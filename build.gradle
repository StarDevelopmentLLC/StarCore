import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar 

plugins {
    id 'common'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '9.2.2'
}

group = 'com.stardevllc'
version = '0.13.6'

publishing {
    repositories {
        maven {
            name="stardev"
            url="https://repo.stardevllc.com/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    
    publications {
        shadow(MavenPublication) {
            from components.shadow
            
            artifact ("build/libs/${project.name}-${project.version}-javadoc.jar") {
                classifier = "javadoc"
            }
            artifact ("build/libs/${project.name}-${project.version}-sources.jar") {
                classifier = "sources"
            }
        }
    }
}

processResources {
    filesMatching("*.yml") {
        expand(project.properties)
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }

    withJavadocJar()
    withSourcesJar()
}

tasks.named('shadowJar', ShadowJar) {
    archiveClassifier = ''
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    dependencies {
        exclude(dependency("org.yaml:snakeyaml:.*"))
        exclude(dependency("com.mysql:mysql-connector-j:.*"))
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://repo.stardevllc.com/releases'
    }

    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }

    maven {
        url = 'https://repo.codemc.org/repository/maven-public/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21.10-R0.1-SNAPSHOT'
    compileOnly "de.tr7zw:item-nbt-api-plugin:${nbtapiVersion}"

    implementation "com.stardevllc:StarMCLib:${starmclibVersion}"
    implementation "com.stardevllc:StarEvents:${stareventsVersion}"
    implementation "com.stardevllc:StarItems:${staritemsVersion}"

    implementation "com.stardevllc:StarSQL:${starsqlVersion}"
    implementation "com.stardevllc:config:${starconfigVersion}"
    
    //Project ones
    implementation project(':api')
    implementation project(':v1_8')
    implementation project(':v1_16_1')
}

tasks.named("javadoc", Javadoc) {
    subprojects { subproject ->
        source += subproject.sourceSets.main.allJava
    }
    source += project.sourceSets.main.allJava

    subprojects { subproject ->
        classpath += subproject.sourceSets.main.compileClasspath
        classpath += subproject.sourceSets.main.runtimeClasspath
    }

    classpath += project.sourceSets.main.compileClasspath
}

tasks.named('sourcesJar', Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource

    subprojects { subproject ->
        from subproject.sourceSets.main.allSource
    }
}

tasks.compileJava.dependsOn(clean)
tasks.jar.finalizedBy(shadowJar)

tasks.withType(PublishToMavenLocal).configureEach {
    dependsOn(shadowJar)
    dependsOn(javadocJar)
    dependsOn(sourcesJar)
}

tasks.withType(PublishToMavenRepository).configureEach {
    dependsOn(shadowJar)
    dependsOn(javadocJar)
    dependsOn(sourcesJar)
}

tasks.build.finalizedBy(publishToMavenLocal)
//tasks.build.finalizedBy(publish)